//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GUI.CustomerOrderServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceCustomerOrder", Namespace="http://schemas.datacontract.org/2004/07/Service.Model")]
    [System.SerializableAttribute()]
    public partial class ServiceCustomerOrder : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustomerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DiscountCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal FinalPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PaymentMethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GUI.CustomerOrderServiceReference.ServiceProductLine[] ShoppingCartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustomerId {
            get {
                return this.CustomerIdField;
            }
            set {
                if ((this.CustomerIdField.Equals(value) != true)) {
                    this.CustomerIdField = value;
                    this.RaisePropertyChanged("CustomerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateOrder {
            get {
                return this.DateOrderField;
            }
            set {
                if ((this.DateOrderField.Equals(value) != true)) {
                    this.DateOrderField = value;
                    this.RaisePropertyChanged("DateOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DiscountCode {
            get {
                return this.DiscountCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DiscountCodeField, value) != true)) {
                    this.DiscountCodeField = value;
                    this.RaisePropertyChanged("DiscountCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal FinalPrice {
            get {
                return this.FinalPriceField;
            }
            set {
                if ((this.FinalPriceField.Equals(value) != true)) {
                    this.FinalPriceField = value;
                    this.RaisePropertyChanged("FinalPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderId {
            get {
                return this.OrderIdField;
            }
            set {
                if ((this.OrderIdField.Equals(value) != true)) {
                    this.OrderIdField = value;
                    this.RaisePropertyChanged("OrderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PaymentMethod {
            get {
                return this.PaymentMethodField;
            }
            set {
                if ((this.PaymentMethodField.Equals(value) != true)) {
                    this.PaymentMethodField = value;
                    this.RaisePropertyChanged("PaymentMethod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GUI.CustomerOrderServiceReference.ServiceProductLine[] ShoppingCart {
            get {
                return this.ShoppingCartField;
            }
            set {
                if ((object.ReferenceEquals(this.ShoppingCartField, value) != true)) {
                    this.ShoppingCartField = value;
                    this.RaisePropertyChanged("ShoppingCart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceProductLine", Namespace="http://schemas.datacontract.org/2004/07/Service.Model")]
    [System.SerializableAttribute()]
    public partial class ServiceProductLine : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GUI.CustomerOrderServiceReference.ServiceProduct ProductField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductLineIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SubTotalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderId {
            get {
                return this.OrderIdField;
            }
            set {
                if ((this.OrderIdField.Equals(value) != true)) {
                    this.OrderIdField = value;
                    this.RaisePropertyChanged("OrderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GUI.CustomerOrderServiceReference.ServiceProduct Product {
            get {
                return this.ProductField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductField, value) != true)) {
                    this.ProductField = value;
                    this.RaisePropertyChanged("Product");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductLineId {
            get {
                return this.ProductLineIdField;
            }
            set {
                if ((this.ProductLineIdField.Equals(value) != true)) {
                    this.ProductLineIdField = value;
                    this.RaisePropertyChanged("ProductLineId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SubTotal {
            get {
                return this.SubTotalField;
            }
            set {
                if ((this.SubTotalField.Equals(value) != true)) {
                    this.SubTotalField = value;
                    this.RaisePropertyChanged("SubTotal");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceProduct", Namespace="http://schemas.datacontract.org/2004/07/Service.Model")]
    [System.SerializableAttribute()]
    public partial class ServiceProduct : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AmountOnStockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BrandIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CategoryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] rowIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AmountOnStock {
            get {
                return this.AmountOnStockField;
            }
            set {
                if ((this.AmountOnStockField.Equals(value) != true)) {
                    this.AmountOnStockField = value;
                    this.RaisePropertyChanged("AmountOnStock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BrandId {
            get {
                return this.BrandIdField;
            }
            set {
                if ((this.BrandIdField.Equals(value) != true)) {
                    this.BrandIdField = value;
                    this.RaisePropertyChanged("BrandId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryId {
            get {
                return this.CategoryIdField;
            }
            set {
                if ((this.CategoryIdField.Equals(value) != true)) {
                    this.CategoryIdField = value;
                    this.RaisePropertyChanged("CategoryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductId {
            get {
                return this.ProductIdField;
            }
            set {
                if ((this.ProductIdField.Equals(value) != true)) {
                    this.ProductIdField = value;
                    this.RaisePropertyChanged("ProductId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] rowId {
            get {
                return this.rowIdField;
            }
            set {
                if ((object.ReferenceEquals(this.rowIdField, value) != true)) {
                    this.rowIdField = value;
                    this.RaisePropertyChanged("rowId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceDeliveryDescription", Namespace="http://schemas.datacontract.org/2004/07/Service.Model")]
    [System.SerializableAttribute()]
    public partial class ServiceDeliveryDescription : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CustomerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DeliveryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ZipCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustomerId {
            get {
                return this.CustomerIdField;
            }
            set {
                if ((this.CustomerIdField.Equals(value) != true)) {
                    this.CustomerIdField = value;
                    this.RaisePropertyChanged("CustomerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DeliveryId {
            get {
                return this.DeliveryIdField;
            }
            set {
                if ((this.DeliveryIdField.Equals(value) != true)) {
                    this.DeliveryIdField = value;
                    this.RaisePropertyChanged("DeliveryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNo {
            get {
                return this.PhoneNoField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNoField, value) != true)) {
                    this.PhoneNoField = value;
                    this.RaisePropertyChanged("PhoneNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ZipCode {
            get {
                return this.ZipCodeField;
            }
            set {
                if ((this.ZipCodeField.Equals(value) != true)) {
                    this.ZipCodeField = value;
                    this.RaisePropertyChanged("ZipCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceDiscount", Namespace="http://schemas.datacontract.org/2004/07/Service.Model")]
    [System.SerializableAttribute()]
    public partial class ServiceDiscount : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DiscountAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DiscountCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DiscountAmount {
            get {
                return this.DiscountAmountField;
            }
            set {
                if ((this.DiscountAmountField.Equals(value) != true)) {
                    this.DiscountAmountField = value;
                    this.RaisePropertyChanged("DiscountAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DiscountCode {
            get {
                return this.DiscountCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DiscountCodeField, value) != true)) {
                    this.DiscountCodeField = value;
                    this.RaisePropertyChanged("DiscountCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServicePaymentMethod", Namespace="http://schemas.datacontract.org/2004/07/Service.Model")]
    [System.SerializableAttribute()]
    public partial class ServicePaymentMethod : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PMethodIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PaymentMethodValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PMethodId {
            get {
                return this.PMethodIdField;
            }
            set {
                if ((this.PMethodIdField.Equals(value) != true)) {
                    this.PMethodIdField = value;
                    this.RaisePropertyChanged("PMethodId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PaymentMethodValue {
            get {
                return this.PaymentMethodValueField;
            }
            set {
                if ((object.ReferenceEquals(this.PaymentMethodValueField, value) != true)) {
                    this.PaymentMethodValueField = value;
                    this.RaisePropertyChanged("PaymentMethodValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CustomerOrderServiceReference.ICustomerOrderService")]
    public interface ICustomerOrderService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerOrderService/DeleteOrder", ReplyAction="http://tempuri.org/ICustomerOrderService/DeleteOrderResponse")]
        void DeleteOrder(int orderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerOrderService/DeleteOrder", ReplyAction="http://tempuri.org/ICustomerOrderService/DeleteOrderResponse")]
        System.Threading.Tasks.Task DeleteOrderAsync(int orderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerOrderService/InsertOrder", ReplyAction="http://tempuri.org/ICustomerOrderService/InsertOrderResponse")]
        int InsertOrder(GUI.CustomerOrderServiceReference.ServiceCustomerOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerOrderService/InsertOrder", ReplyAction="http://tempuri.org/ICustomerOrderService/InsertOrderResponse")]
        System.Threading.Tasks.Task<int> InsertOrderAsync(GUI.CustomerOrderServiceReference.ServiceCustomerOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerOrderService/UpdateOrder", ReplyAction="http://tempuri.org/ICustomerOrderService/UpdateOrderResponse")]
        void UpdateOrder(GUI.CustomerOrderServiceReference.ServiceCustomerOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerOrderService/UpdateOrder", ReplyAction="http://tempuri.org/ICustomerOrderService/UpdateOrderResponse")]
        System.Threading.Tasks.Task UpdateOrderAsync(GUI.CustomerOrderServiceReference.ServiceCustomerOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerOrderService/GetAllOrders", ReplyAction="http://tempuri.org/ICustomerOrderService/GetAllOrdersResponse")]
        GUI.CustomerOrderServiceReference.ServiceCustomerOrder[] GetAllOrders();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerOrderService/GetAllOrders", ReplyAction="http://tempuri.org/ICustomerOrderService/GetAllOrdersResponse")]
        System.Threading.Tasks.Task<GUI.CustomerOrderServiceReference.ServiceCustomerOrder[]> GetAllOrdersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerOrderService/GetCancelledOrders", ReplyAction="http://tempuri.org/ICustomerOrderService/GetCancelledOrdersResponse")]
        GUI.CustomerOrderServiceReference.ServiceCustomerOrder[] GetCancelledOrders();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerOrderService/GetCancelledOrders", ReplyAction="http://tempuri.org/ICustomerOrderService/GetCancelledOrdersResponse")]
        System.Threading.Tasks.Task<GUI.CustomerOrderServiceReference.ServiceCustomerOrder[]> GetCancelledOrdersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerOrderService/GetActiveOrders", ReplyAction="http://tempuri.org/ICustomerOrderService/GetActiveOrdersResponse")]
        GUI.CustomerOrderServiceReference.ServiceCustomerOrder[] GetActiveOrders();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerOrderService/GetActiveOrders", ReplyAction="http://tempuri.org/ICustomerOrderService/GetActiveOrdersResponse")]
        System.Threading.Tasks.Task<GUI.CustomerOrderServiceReference.ServiceCustomerOrder[]> GetActiveOrdersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerOrderService/GetOrder", ReplyAction="http://tempuri.org/ICustomerOrderService/GetOrderResponse")]
        GUI.CustomerOrderServiceReference.ServiceCustomerOrder GetOrder(int customerOrderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerOrderService/GetOrder", ReplyAction="http://tempuri.org/ICustomerOrderService/GetOrderResponse")]
        System.Threading.Tasks.Task<GUI.CustomerOrderServiceReference.ServiceCustomerOrder> GetOrderAsync(int customerOrderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerOrderService/InsertDeliveryDescription", ReplyAction="http://tempuri.org/ICustomerOrderService/InsertDeliveryDescriptionResponse")]
        void InsertDeliveryDescription(GUI.CustomerOrderServiceReference.ServiceDeliveryDescription deliveryDescription);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerOrderService/InsertDeliveryDescription", ReplyAction="http://tempuri.org/ICustomerOrderService/InsertDeliveryDescriptionResponse")]
        System.Threading.Tasks.Task InsertDeliveryDescriptionAsync(GUI.CustomerOrderServiceReference.ServiceDeliveryDescription deliveryDescription);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerOrderService/GetDeliveryDescriptionById", ReplyAction="http://tempuri.org/ICustomerOrderService/GetDeliveryDescriptionByIdResponse")]
        GUI.CustomerOrderServiceReference.ServiceDeliveryDescription GetDeliveryDescriptionById(int deliveryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerOrderService/GetDeliveryDescriptionById", ReplyAction="http://tempuri.org/ICustomerOrderService/GetDeliveryDescriptionByIdResponse")]
        System.Threading.Tasks.Task<GUI.CustomerOrderServiceReference.ServiceDeliveryDescription> GetDeliveryDescriptionByIdAsync(int deliveryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerOrderService/UpdateDeliveryDescription", ReplyAction="http://tempuri.org/ICustomerOrderService/UpdateDeliveryDescriptionResponse")]
        void UpdateDeliveryDescription(GUI.CustomerOrderServiceReference.ServiceDeliveryDescription deliveryDescription);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerOrderService/UpdateDeliveryDescription", ReplyAction="http://tempuri.org/ICustomerOrderService/UpdateDeliveryDescriptionResponse")]
        System.Threading.Tasks.Task UpdateDeliveryDescriptionAsync(GUI.CustomerOrderServiceReference.ServiceDeliveryDescription deliveryDescription);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerOrderService/DeleteDeliveryDescription", ReplyAction="http://tempuri.org/ICustomerOrderService/DeleteDeliveryDescriptionResponse")]
        void DeleteDeliveryDescription(int deliveryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerOrderService/DeleteDeliveryDescription", ReplyAction="http://tempuri.org/ICustomerOrderService/DeleteDeliveryDescriptionResponse")]
        System.Threading.Tasks.Task DeleteDeliveryDescriptionAsync(int deliveryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerOrderService/InsertDiscount", ReplyAction="http://tempuri.org/ICustomerOrderService/InsertDiscountResponse")]
        void InsertDiscount(GUI.CustomerOrderServiceReference.ServiceDiscount discount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerOrderService/InsertDiscount", ReplyAction="http://tempuri.org/ICustomerOrderService/InsertDiscountResponse")]
        System.Threading.Tasks.Task InsertDiscountAsync(GUI.CustomerOrderServiceReference.ServiceDiscount discount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerOrderService/DeleteDiscount", ReplyAction="http://tempuri.org/ICustomerOrderService/DeleteDiscountResponse")]
        int DeleteDiscount(string discountCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerOrderService/DeleteDiscount", ReplyAction="http://tempuri.org/ICustomerOrderService/DeleteDiscountResponse")]
        System.Threading.Tasks.Task<int> DeleteDiscountAsync(string discountCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerOrderService/GetDiscountByCode", ReplyAction="http://tempuri.org/ICustomerOrderService/GetDiscountByCodeResponse")]
        decimal GetDiscountByCode(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerOrderService/GetDiscountByCode", ReplyAction="http://tempuri.org/ICustomerOrderService/GetDiscountByCodeResponse")]
        System.Threading.Tasks.Task<decimal> GetDiscountByCodeAsync(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerOrderService/GetPaymentMethods", ReplyAction="http://tempuri.org/ICustomerOrderService/GetPaymentMethodsResponse")]
        GUI.CustomerOrderServiceReference.ServicePaymentMethod[] GetPaymentMethods();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerOrderService/GetPaymentMethods", ReplyAction="http://tempuri.org/ICustomerOrderService/GetPaymentMethodsResponse")]
        System.Threading.Tasks.Task<GUI.CustomerOrderServiceReference.ServicePaymentMethod[]> GetPaymentMethodsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerOrderService/FinishCheckout", ReplyAction="http://tempuri.org/ICustomerOrderService/FinishCheckoutResponse")]
        bool FinishCheckout(GUI.CustomerOrderServiceReference.ServiceCustomerOrder order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICustomerOrderService/FinishCheckout", ReplyAction="http://tempuri.org/ICustomerOrderService/FinishCheckoutResponse")]
        System.Threading.Tasks.Task<bool> FinishCheckoutAsync(GUI.CustomerOrderServiceReference.ServiceCustomerOrder order);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICustomerOrderServiceChannel : GUI.CustomerOrderServiceReference.ICustomerOrderService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CustomerOrderServiceClient : System.ServiceModel.ClientBase<GUI.CustomerOrderServiceReference.ICustomerOrderService>, GUI.CustomerOrderServiceReference.ICustomerOrderService {
        
        public CustomerOrderServiceClient() {
        }
        
        public CustomerOrderServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CustomerOrderServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CustomerOrderServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CustomerOrderServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void DeleteOrder(int orderId) {
            base.Channel.DeleteOrder(orderId);
        }
        
        public System.Threading.Tasks.Task DeleteOrderAsync(int orderId) {
            return base.Channel.DeleteOrderAsync(orderId);
        }
        
        public int InsertOrder(GUI.CustomerOrderServiceReference.ServiceCustomerOrder order) {
            return base.Channel.InsertOrder(order);
        }
        
        public System.Threading.Tasks.Task<int> InsertOrderAsync(GUI.CustomerOrderServiceReference.ServiceCustomerOrder order) {
            return base.Channel.InsertOrderAsync(order);
        }
        
        public void UpdateOrder(GUI.CustomerOrderServiceReference.ServiceCustomerOrder order) {
            base.Channel.UpdateOrder(order);
        }
        
        public System.Threading.Tasks.Task UpdateOrderAsync(GUI.CustomerOrderServiceReference.ServiceCustomerOrder order) {
            return base.Channel.UpdateOrderAsync(order);
        }
        
        public GUI.CustomerOrderServiceReference.ServiceCustomerOrder[] GetAllOrders() {
            return base.Channel.GetAllOrders();
        }
        
        public System.Threading.Tasks.Task<GUI.CustomerOrderServiceReference.ServiceCustomerOrder[]> GetAllOrdersAsync() {
            return base.Channel.GetAllOrdersAsync();
        }
        
        public GUI.CustomerOrderServiceReference.ServiceCustomerOrder[] GetCancelledOrders() {
            return base.Channel.GetCancelledOrders();
        }
        
        public System.Threading.Tasks.Task<GUI.CustomerOrderServiceReference.ServiceCustomerOrder[]> GetCancelledOrdersAsync() {
            return base.Channel.GetCancelledOrdersAsync();
        }
        
        public GUI.CustomerOrderServiceReference.ServiceCustomerOrder[] GetActiveOrders() {
            return base.Channel.GetActiveOrders();
        }
        
        public System.Threading.Tasks.Task<GUI.CustomerOrderServiceReference.ServiceCustomerOrder[]> GetActiveOrdersAsync() {
            return base.Channel.GetActiveOrdersAsync();
        }
        
        public GUI.CustomerOrderServiceReference.ServiceCustomerOrder GetOrder(int customerOrderId) {
            return base.Channel.GetOrder(customerOrderId);
        }
        
        public System.Threading.Tasks.Task<GUI.CustomerOrderServiceReference.ServiceCustomerOrder> GetOrderAsync(int customerOrderId) {
            return base.Channel.GetOrderAsync(customerOrderId);
        }
        
        public void InsertDeliveryDescription(GUI.CustomerOrderServiceReference.ServiceDeliveryDescription deliveryDescription) {
            base.Channel.InsertDeliveryDescription(deliveryDescription);
        }
        
        public System.Threading.Tasks.Task InsertDeliveryDescriptionAsync(GUI.CustomerOrderServiceReference.ServiceDeliveryDescription deliveryDescription) {
            return base.Channel.InsertDeliveryDescriptionAsync(deliveryDescription);
        }
        
        public GUI.CustomerOrderServiceReference.ServiceDeliveryDescription GetDeliveryDescriptionById(int deliveryId) {
            return base.Channel.GetDeliveryDescriptionById(deliveryId);
        }
        
        public System.Threading.Tasks.Task<GUI.CustomerOrderServiceReference.ServiceDeliveryDescription> GetDeliveryDescriptionByIdAsync(int deliveryId) {
            return base.Channel.GetDeliveryDescriptionByIdAsync(deliveryId);
        }
        
        public void UpdateDeliveryDescription(GUI.CustomerOrderServiceReference.ServiceDeliveryDescription deliveryDescription) {
            base.Channel.UpdateDeliveryDescription(deliveryDescription);
        }
        
        public System.Threading.Tasks.Task UpdateDeliveryDescriptionAsync(GUI.CustomerOrderServiceReference.ServiceDeliveryDescription deliveryDescription) {
            return base.Channel.UpdateDeliveryDescriptionAsync(deliveryDescription);
        }
        
        public void DeleteDeliveryDescription(int deliveryId) {
            base.Channel.DeleteDeliveryDescription(deliveryId);
        }
        
        public System.Threading.Tasks.Task DeleteDeliveryDescriptionAsync(int deliveryId) {
            return base.Channel.DeleteDeliveryDescriptionAsync(deliveryId);
        }
        
        public void InsertDiscount(GUI.CustomerOrderServiceReference.ServiceDiscount discount) {
            base.Channel.InsertDiscount(discount);
        }
        
        public System.Threading.Tasks.Task InsertDiscountAsync(GUI.CustomerOrderServiceReference.ServiceDiscount discount) {
            return base.Channel.InsertDiscountAsync(discount);
        }
        
        public int DeleteDiscount(string discountCode) {
            return base.Channel.DeleteDiscount(discountCode);
        }
        
        public System.Threading.Tasks.Task<int> DeleteDiscountAsync(string discountCode) {
            return base.Channel.DeleteDiscountAsync(discountCode);
        }
        
        public decimal GetDiscountByCode(string code) {
            return base.Channel.GetDiscountByCode(code);
        }
        
        public System.Threading.Tasks.Task<decimal> GetDiscountByCodeAsync(string code) {
            return base.Channel.GetDiscountByCodeAsync(code);
        }
        
        public GUI.CustomerOrderServiceReference.ServicePaymentMethod[] GetPaymentMethods() {
            return base.Channel.GetPaymentMethods();
        }
        
        public System.Threading.Tasks.Task<GUI.CustomerOrderServiceReference.ServicePaymentMethod[]> GetPaymentMethodsAsync() {
            return base.Channel.GetPaymentMethodsAsync();
        }
        
        public bool FinishCheckout(GUI.CustomerOrderServiceReference.ServiceCustomerOrder order) {
            return base.Channel.FinishCheckout(order);
        }
        
        public System.Threading.Tasks.Task<bool> FinishCheckoutAsync(GUI.CustomerOrderServiceReference.ServiceCustomerOrder order) {
            return base.Channel.FinishCheckoutAsync(order);
        }
    }
}
